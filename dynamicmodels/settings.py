"""
Django settings for dynamicmodels project.

Generated by 'django-admin startproject' using Django 3.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""
from datetime import timedelta
import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
TEMPLATE_DIR = os.path.join(BASE_DIR, "ddmapp/templates")
STATIC_DIR = os.path.join(BASE_DIR, "static")


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'h+_m*5z!t3xg97qnth_)n#ojz@a2w9$#fa@=^o6zy_5vvqtbsw'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'channels',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'ddmapp',
    'dynamic_models',
    'rest_framework',
    'corsheaders',
    'users',
    'notifications',
    'parserapp',
    'chat',
    'rest_framework_simplejwt',
    'rest_framework_simplejwt.token_blacklist',
]

# Whitenoise middleware added
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'dynamicmodels.urls'

# Dynamic Models Configuration
DYNAMIC_MODELS = {
    'DEFAULT_CHARFIELD_MAX_LENGTH': 255,
    # 'CACHE_TIMEOUT': 10,
    'USE_APP_LABEL': 'ddmapp',
    'CACHE_KEY_PREFIX': 'ddmapp_',
}

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # Django knows where to find the main index.js file
        'DIRS': [TEMPLATE_DIR, os.path.join(BASE_DIR, 'build'), ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

STATICFILES_DIRS = [
    # Tell Django where to look for static files for react app.
    os.path.join(BASE_DIR, 'build/static'),
]

ASGI_APPLICATION = 'dynamicmodels.asgi.application'
WSGI_APPLICATION = 'dynamicmodels.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db5.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/


<< << << < HEAD
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',
        == == == =

        REST_FRAMEWORK= {
            'DEFAULT_PERMISSION_CLASSES': [
                'rest_framework.permissions.AllowAny',
                >>>>>> > 95ae8db0fba198080d12019d09c3fa7483f07697
            ],
            'DEFAULT_AUTHENTICATION_CLASSES': [
                'rest_framework_simplejwt.authentication.JWTAuthentication'
            ],
            << << << < HEAD


        }
        CORS_ALLOWED_ORIGINS= [
            "http://localhost:3000",
            "http://192.168.1.6:3000",
            "http://localhost:8000",
            == == == =


        }
        CORS_ALLOWED_ORIGINS= [
            "http://localhost:3000",
            "http://192.168.1.6:3000",
            >>>>>> > 95ae8db0fba198080d12019d09c3fa7483f07697
            "https://sanskarbiyani.github.io",
        ]
        DEFAULT_AUTO_FIELD= 'django.db.models.AutoField'
        DATE_INPUT_FORMATS= ['%d-%m-%Y']

        STATIC_URL= '/static/'
        STATIC_ROOT= STATIC_DIR

        AUTH_USER_MODEL= "users.NewUser"


        SIMPLE_JWT= {
            'ACCESS_TOKEN_LIFETIME': timedelta(minutes=120),
            'REFRESH_TOKEN_LIFETIME': timedelta(days=10),
            'ROTATE_REFRESH_TOKENS': True,
            'BLACKLIST_AFTER_ROTATION': True,
            'ALGORITHM': 'HS256',
            'SIGNING_KEY': SECRET_KEY,
            'VERIFYING_KEY': None,
            'AUTH_HEADER_TYPES': ('JWT',),
            'USER_ID_FIELD': 'id',
            'USER_ID_CLAIM': 'user_id',
            'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
            'TOKEN_TYPE_CLAIM': 'token_type',
        }

        EMAIL_USE_TLS= True
        EMAIL_HOST= 'smtp.office365.com'
        EMAIL_PORT= 587
        EMAIL_HOST_USER= 'Kshitija.Supekar.external@idiada.com'
        EMAIL_HOST_PASSWORD= 'NRp78e6XV$'

        MEDIA_ROOT= os.path.join(BASE_DIR, 'media')
        MEDIA_URL= '/media/'

        CHANNEL_LAYERS= {
            "default": {
                "BACKEND": "channels.layers.InMemoryChannelLayer"
                << << << < HEAD
            },
        }

        STATICFILES_STORAGE= "whitenoise.storage.CompressedManifestStaticFilesStorage"
        == == == =
    },
}

# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'build/static'),
# ]

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
>>>>>> > 95ae8db0fba198080d12019d09c3fa7483f07697
